package chatroom:client-client;

interface chatroom-client-client {
  use wasi:io/poll@0.2.0.{ pollable as wasi-io-pollable };
  use wasi:clocks/wall-clock@0.2.0.{ datetime as wasi-clocks-datetime };
  use golem:rpc/types@0.1.3.{ uri as golem-rpc-uri, cancellation-token as golem-rpc-cancellation-token };
  resource future-get-result {
    subscribe: func() -> wasi-io-pollable;
    get: func() -> option<u64>;
  }
  resource chatroom-client-api {
    constructor(location: golem-rpc-uri);
    blocking-add: func(value: u64);
    add: func(value: u64);
    schedule-add: func(value: u64, scheduled-for: wasi-clocks-datetime) -> golem-rpc-cancellation-token;
    blocking-get: func() -> u64;
    get: func() -> future-get-result;
    schedule-get: func(scheduled-for: wasi-clocks-datetime) -> golem-rpc-cancellation-token;
  }
}

world wasm-rpc-client-chatroom-client {
  export chatroom-client-client;
}
